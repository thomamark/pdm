<!DOCTYPE html>
<% content_for :header do %>
	 <title>Panda Dragon Maze - Level builder</title>
		<style type="text/css">
			.toolbar {
				width: 100%;
				float: left;
				}

		 	.toolbar ul {
				list-style: none; 
				display: inline;
				margin: 0px;
				padding: 0px;
			}

			.toolbar li {
				float: left;
				width: 108px;
				height: 108px;
				border: 1px solid #eee;
				text-align: center;
				line-height: 100px;
				vertical-align: middle;
			}

			.toolbar li:hover {
				border: solid 1px #888;
			}

			.selected {
				background-color: #99FFFF;
			}

			#game-content {
				position: relative;
				clear: both;
			}
			.canvas {
				position: absolute;
				top: auto;
				left: auto;
			}

		</style>

		<script>
			//var SPRITE_SCALE = 1;
			//var GRID_W = 32*SPRITE_SCALE;
			//var GRID_H = 16*SPRITE_SCALE;
      INIT_GAME = false; //var defined in maze.js which
			var selectedId;
			var selectedImg;
			var selectedObj;
			var MAX_PER_MAP = {"dragon" : 1};
			var COUNTS = {};
      var IMGS;
			var OBJS;
			var oldR =-1;
			var oldC = -1;
			//var canvasX = -1;
			//var canvasY = -1;
           
			function select() {
				$('li').each(function (i, el) { $(el).removeClass('selected');});
				selectedId = this.id;
				selectedImg = IMGS[this.id];
				selectedObj = OBJS[this.id];
				$(this).addClass('selected');
			}

			function findPos(obj) {
				    var curleft = 0, curtop = 0;
				    if (obj.offsetParent) {
				        do {
				            curleft += obj.offsetLeft;
				            curtop += obj.offsetTop;
				        } while (obj = obj.offsetParent);
				        return { x: curleft, y: curtop };
				    }
				    return undefined;
			}

      $(document).ready( function () {
					maze = new Maze();
					maze.setSize(31, 28);

					OBJS = {
            "wall" : WallPoint,
            "panda" : BonusPoint,
            "goal" : GoalPoint,
            "dragon" : StartPoint
						}

        gameCanvas = document.getElementById('maze-canvas');
        bgCanvas = document.getElementById('maze-canvas-background');
				tileCanvas = document.getElementById('tile-canvas');
        gameStage = gameCanvas.getContext("2d");
        bgStage = bgCanvas.getContext("2d");
        tileStage = tileCanvas.getContext("2d");
				var mrpx = MAX_ROWS*GRID_H;
				var mcpx = MAX_COLS*GRID_W;
				
        $('#maze-canvas').attr("height", mrpx);
        $('#maze-canvas').attr("width", mcpx);
        $('#maze-canvas-background').attr("height", mrpx);
        $('#maze-canvas-background').attr("width", mcpx);
        $('#tile-canvas').attr("height", mrpx);
        $('#tile-canvas').attr("width", mcpx);

        $('#maze-canvas').height(mrpx);
        $('#maze-canvas').width(mcpx);
        $('#maze-canvas-background').height(mrpx);
        $('#maze-canvas-background').width(mcpx);
        $('#tile-canvas').height(mrpx);
        $('#tile-canvas').width(mcpx);
					
			  $('#maze-canvas').click(function(e) {
					alert(curR + " " + curC);
				});

			  $('#maze-canvas').mousemove(function(e) {
					    var pos = findPos(this);
					    var x = e.pageX - pos.x;
					    var y = e.pageY - pos.y;
							curC = Math.ceil(x/GRID_W);
							curR = Math.ceil(y/GRID_H);
							//$('#cx').text(x);
							//$('#cy').text(y);
							//$('#cr').text(curR);
							//$('#cc').text(curC);
							if (selectedId && !(curR == oldR && curC == oldC))	{
								bgStage.clearRect(0,0,bgCanvas.width,bgCanvas.height);
                //maze.render();
								gameStage.clearRect(0,0,gameCanvas.width,gameCanvas.height);
								renderObject(new selectedObj(curR, curC), gameStage);
								oldR = curR;
								oldC = curC;
							}
//					    var coordinateDisplay = "x=" + x + ", y=" + y;
//					    writeCoordinateDisplay(coordinateDisplay);
					});
			  
        init(function () {
          //wait until images are actually loaded
          IMGS = {
            "wall" : WALL_BLOCK_IMG,
            "panda" : PANDA_IMG,
            "goal" : PORTAL_IMG,
            "dragon" : HEAD_DOWN_IMG, 
            "delete" : DELETE_IMG
						}


				  	$('li').each( function (i, el) {
				      $(el).click(select);
              $(el).append("<img src='"+IMGS[el.id].src+"' />");
					  	COUNTS[el.id] = 0;
				   	});
          })
				});
		</script>
	<!-- what matters:
				shared code
					tile size
					canvas size
					wall rendering
					game engine/play (for preview)
				
				elements;
					walls
					goals
					pandas
					start position
					delete

				P0 features:
					add element
					remove element
					render walls correctly
					export map creation code

				P1 features:
					preview/preplay
					export map

				n2h features:
					auto-add borders
					changing tile size
					adding multiple goals with multiple results
				
				-->
 <% end %>


		<div class="toolbar">
			<ul class="toolbar">
        <!-- Images added via js  -->
				<li id="wall"></li>
				<li id="panda"></li>
				<li id="goal"></li>
        <li id="dragon"></li>
				<li id="delete"></li>
			</ul>
		</div>
	<!--
		<span >X = <span id="cx">&nbsp;</span> </span>
		<span >Y = <span id="cy">&nbsp;</span> </span>
		<span >R = <span id="cr">&nbsp;</span> </span>
		<span >C = <span id="cc">&nbsp;</span> </span>
	-->
        <div class="canvas" id="game-content">
                <canvas class="canvas" id="tile-canvas" style="z-index: 1;"></canvas>
                <canvas class="canvas" id="maze-canvas-background" style="z-index: 2;"></canvas>
                <canvas class="canvas" id="maze-canvas" style="z-index: 3;"></canvas>
        </div>
